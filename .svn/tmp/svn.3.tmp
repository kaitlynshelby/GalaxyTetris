/*
 * TCSS 305 - Spring 2016
 * Assignment 6 - Tetris
 */
package view;

import java.awt.FlowLayout;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.GridLayout;
import java.awt.Image;
import java.awt.Toolkit;
import javax.swing.Box;
import javax.swing.BoxLayout;
import javax.swing.ButtonGroup;
import javax.swing.ImageIcon;
import javax.swing.JComponent;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JRadioButton;
import javax.swing.JSlider;
import javax.swing.SwingConstants;

import model.Board;

/**
 * The Tetris GUI.
 * 
 * @author Kaitlyn Kinerk
 * @version 1.0
 */
@SuppressWarnings("serial")
public class TetrisGUI extends JFrame {

    /** A scalable amount of padding to put around components. */
    public static final int PADDING = 20;

    /** The GUI's game board. */
    private TetrisBoard myTetrisBoard;

    /** The piece preview panel to add to this frame. */
    private PiecePreview myPiecePreview;

    /** The info panel to add to this frame. */
    private InfoPanel myInfoPanel;

    /** The back-end game board logic to connect to the front-end code.*/
    private Board myBoard;
    
    
 
    /**
     * Constructs the GUI with all necessary components.
     */
    public TetrisGUI() {
        super();

        myTetrisBoard = new TetrisBoard(this);
        myPiecePreview = new PiecePreview(190);
        myInfoPanel = new InfoPanel(390,
                                    myTetrisBoard);
        

        setupFrame();
        
        setVisible(true);

    }

    /**
     * Registers all Board class observers.
     */
    public void addObservers(Board theBoard) {
        theBoard.addObserver(myTetrisBoard);
        theBoard.addObserver(myPiecePreview);
        theBoard.addObserver(myInfoPanel);

    }

    /**
     * Sets up the JFrame.
     */
    private void setupFrame() {
 
        setTitle("Galaxy Tetris");
        final ImageIcon icon = new ImageIcon("icon.gif"); 
        setIconImage(icon.getImage());
        
        final Image bg = Toolkit.getDefaultToolkit().getImage("galaxy.jpg");
        setContentPane(new BackgroundImage(bg));


        setLayout(new FlowLayout(FlowLayout.CENTER, PADDING, PADDING));

        addLeftColumn();
        addRightColumn();
       
        pack();
        setResizable(false);
    
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLocationRelativeTo(null); 
        
    }
    
    
    /**
     * Adds the left column containing the game board to the frame.
     */
    private void addLeftColumn() {
        final Box b = new Box(BoxLayout.X_AXIS);
        b.add(myTetrisBoard);
        add(b);   
    }
    
    /**
     * Adds the right column containing the piece preview panel and game information panel to 
     * the frame.
     */
    private void addRightColumn() {
        final Box b = new Box(BoxLayout.Y_AXIS);
        b.add(myPiecePreview);
        b.add(Box.createVerticalStrut(PADDING));
        b.add(myInfoPanel);
        add(b);
    }
    
    public void setTetrisBoard(TetrisBoard theBoard) {
        myTetrisBoard = theBoard;
        setupFrame();
        repaint();
        }

    
    private class BackgroundImage extends JComponent {
        
        private Image myImage;
        
        public BackgroundImage(Image theImage) {
            myImage = theImage;
        }
        
        @Override
        public void paintComponent(Graphics theGraphics) {
            super.paintComponent(theGraphics);
            Graphics2D g2d = (Graphics2D) theGraphics;
            
            g2d.drawImage(myImage, 0 ,0, this);
        }
    }
    
    
}
